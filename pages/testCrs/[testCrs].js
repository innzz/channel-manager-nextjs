import styles from "../../styles/Siteminder.module.css";
import "bootstrap/dist/css/bootstrap.min.css";
import { Row, Col } from "react-bootstrap";
import { FaBed } from "react-icons/fa";
import { AiFillThunderbolt } from "react-icons/ai";
import { MdOutlineArrowDropDown, MdSystemUpdateAlt } from "react-icons/md";
import { BsFillTagFill } from "react-icons/bs";
import { MdKeyboardArrowLeft, MdKeyboardArrowRight } from "react-icons/md";
import { AiOutlineDoubleRight, AiOutlineDoubleLeft } from "react-icons/ai";
import { GrRotateLeft } from "react-icons/gr";
import { useState, useEffect } from "react";
import { useRouter } from "next/router";
import Navbar from "../../components/Navbar";
import Head from "next/head";
import {
  getPropertyAPIFunc,
  getSevenDaysDataOfRoomFunc,
} from "./crsApiFunction";

export default function Home() {
  let router = useRouter();

  const { testCrs } = router.query;
  // console.log(siteminder)
  const [allRatesAvailiblityDropDown, setAllRatesAvailiblityDropDown] =
    useState(false);
  const [shopModal, setshopModal] = useState(false);
  const [roomType, setRoomType] = useState(false);
  const [ratePlans, setRatePlans] = useState(false);
  const [bulkUpdateModal, setBulkUpdateModal] = useState(false);
  const [noOfDays, setNoOfDays] = useState(7);
  const [currentDate, setCurrentDate] = useState("");
  const [token, setToken] = useState("");
  const [propertyResponse, setPropertyResponse] = useState([]);
  const [roomDetails, setRoomDetails] = useState([]);
  const [roomDetailsToShow, setRoomDetailsToShow] = useState([]);
  const [roomIdWithSevenDaysData, setRoomIdWithSevenDaysData] = useState([]);
  const [sevenDaysDataofRoomWithId, setSevenDaysDataofRoomWithId] = useState(
    []
  );
  const [roomRatePlansWithCode, setRoomRatePlansWithCode] = useState([]);

  const handleShopModal = () => {
    setshopModal(!shopModal);
  };

  const handleBulkUpdateModal = () => {
    setBulkUpdateModal(!bulkUpdateModal);
  };

  //Current Date Funtion
  const getCurrentDateFunction = () => {
    const currentDate = new Date().toLocaleDateString().split("/");
    for (let i = 0; i < currentDate.length; i++) {
      if (currentDate[i] < 10) {
        currentDate[i] = 0 + currentDate[i];
      }
    }
    const currDate = currentDate.reverse();
    let tempArrival = "";
    tempArrival = currentDate[2];
    currentDate[2] = currentDate[1];
    currentDate[1] = tempArrival;
    let currentDateNew = currDate.join("-");
    return currentDateNew;
  };

  // Seventh Day Date Function
  const getSevenDaysAfterDate = (noOfDays) => {
    const sevenDaysDate = new Date();
    sevenDaysDate.setDate(sevenDaysDate.getDate() + 7);
    const sevenDays = sevenDaysDate.toLocaleDateString().split("/");
    const newSevenDays = [];
    for (let i = 0; i < sevenDays.length; i++) {
      if (sevenDays[i] < 10) {
        sevenDays[i] = 0 + sevenDays[i];
      }
      newSevenDays.push(sevenDays[i]);
    }
    const newSevenDaysDate = sevenDays.reverse();
    let newTempArr = "";
    newTempArr = sevenDays[2];
    sevenDays[2] = sevenDays[1];
    sevenDays[1] = newTempArr;

    let seventhDayDate = sevenDays.join("-");
    return seventhDayDate;
  };

  // Seven Days Data of Room
  const sevenDaysDataOfRoom = (tokenRes, roomIdWithSevenDaysData) => {
    let currentDateFuncResponse = getCurrentDateFunction();
    setCurrentDate(currentDateFuncResponse);
    getSevenDaysDataOfRoomFunc(testCrs, roomIdWithSevenDaysData, tokenRes).then(
      (resJson) => {
        setSevenDaysDataofRoomWithId(resJson);
        // setRoomRatePlansWithCode(resJson[0].roomRatePlans);
      }
    );
  };

  useEffect(() => {
    if (testCrs !== undefined) {
      let currentDateFuncResponse = getCurrentDateFunction();
      setCurrentDate(currentDateFuncResponse);
      let tokenRes = localStorage.getItem("token");
      setToken(tokenRes);
      getPropertyAPIFunc(testCrs, tokenRes).then((resJson) => {
        setPropertyResponse(resJson);
        setRoomDetails(resJson?.roomDtos);
        setRoomDetailsToShow(resJson?.roomDtos[0]);
        setRoomIdWithSevenDaysData(resJson?.roomDtos[0].bookoneRoomId);
        sevenDaysDataOfRoom(tokenRes, resJson?.roomDtos[0].bookoneRoomId);
      });
    }
  }, [router]);
  //   console.log(roomRatePlansWithCode);
  console.log(sevenDaysDataofRoomWithId);
  //   console.log(roomDetails);
  //   sevenDaysDataOfRoom();

  const handleRoomTypesDrop = () => {
    setRoomType(!roomType);
  };

  const handleRateDrop = () => {
    setRatePlans(!ratePlans);
  };

  return (
    <div className={styles.outerContainer}>
      <Navbar />

      <div className={styles.container}>
        <Head>
          <title>MMT Channel Manager</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <div className={styles.table}>
          <div className={styles.topBar}>
            <Row className={`${styles.dateSection} items-center mb-4`}>
              <Col className={styles.dateSelector}>
                <span>
                  <GrRotateLeft size={15} style={{ marginRight: "10px" }} />
                  <AiOutlineDoubleLeft
                    size={15}
                    style={{ marginRight: "10px" }}
                  />
                  <MdKeyboardArrowLeft />
                  Jul 5, 2022
                  <MdKeyboardArrowRight />
                  <AiOutlineDoubleRight
                    size={15}
                    style={{ marginLeft: "10px" }}
                  />
                </span>
              </Col>
              <Col className={styles.dates}>
                <Row className={styles.dateCards}>
                  {sevenDaysDataofRoomWithId.map((val, i) => {
                    let date = new Date(val.date)
                      .toUTCString()
                      .slice(0, 11)
                      .split(" ");
                    return (
                      <Col key={i} className={styles.dateCard}>
                        <span>{date[0]}</span>
                        <span className={styles.boldDateText}>{date[1]}</span>
                        <span>{date[2]}</span>
                      </Col>
                    );
                  })}
                </Row>
              </Col>
            </Row>
          </div>

          {roomDetails.map((val, i) => {
            return (
              <>
                {val.name === roomDetailsToShow?.name && (
                  <div key={i} className={styles.item}>
                    <Row className={styles.heading}>
                      <Col className={styles.Icon}>
                        <FaBed size={18} style={{ marginTop: "5px" }} />
                      </Col>
                      <Col className={styles.leftSection}>
                        <span>{val.name}</span>
                        <AiFillThunderbolt
                          size={15}
                          style={{ marginTop: "5px", color: "#2494d1" }}
                        />
                      </Col>
                      <Col className={styles.midSection}>Avail</Col>
                      <Col className={styles.rightSection}>
                        <Row className={styles.data}>
                          {sevenDaysDataofRoomWithId.map((val2, j) => {
                            return (
                              <Col key={j} className={styles.col}>
                                {val2.noOfAvailable}
                              </Col>
                            );
                          })}
                        </Row>
                      </Col>
                    </Row>
                    <Row className={styles.content}>
                      <Col className={styles.Icon}></Col>
                      <Col className={styles.leftSection}>
                        Room Rates & Plans
                        <AiFillThunderbolt
                          size={15}
                          style={{ marginTop: "5px", color: "#2494d1" }}
                        />
                      </Col>
                      <Col className={styles.midSection}>Rates</Col>
                      <Col className={styles.rightSection}>
                        <Row className={styles.data}>
                          {sevenDaysDataofRoomWithId.map((val3, k) => {
                            return (
                              <Col key={k} className={styles.col}>
                                {val3.price}
                              </Col>
                            );
                          })}
                        </Row>
                      </Col>
                    </Row>

                    <Row className={styles.content}>
                      <Col className={styles.Icon}></Col>
                      <Col className={styles.leftSection}>
                        Plans
                        <AiFillThunderbolt
                          size={15}
                          style={{ marginTop: "5px", color: "#2494d1" }}
                        />
                      </Col>
                      <Col className={styles.midSection}>Rates</Col>
                      <Col className={styles.rightSection}>
                        <Row className={styles.data}>
                          <Col className={styles.col}>YES</Col>
                          <Col className={styles.col}>YES</Col>
                          <Col className={styles.col}>YES</Col>
                          <Col className={styles.col}>YES</Col>
                          <Col className={styles.col}>YES</Col>
                          <Col className={styles.col}>YES</Col>
                          <Col className={styles.col}>YES</Col>
                        </Row>
                      </Col>
                    </Row>
                  </div>
                )}
              </>
            );
          })}

          <div className={styles.buttonGroup}>
            <Row className="">
              <Col className={`${styles.buttons}`}>
                <button
                  onClick={handleRoomTypesDrop}
                  className={`${styles.button} flex h-10 items-center`}
                >
                  <FaBed
                    style={{ marginRight: "8px", marginBottom: "2px" }}
                    size={15}
                  />
                  All Room Types
                  <MdOutlineArrowDropDown
                    size={22}
                    style={{ marginLeft: "2px", marginBottom: "2px" }}
                  />
                  <div
                    className={styles.roomTypeDrop}
                    onMouseLeave={handleRoomTypesDrop}
                    style={
                      roomType ? { display: "block" } : { display: "none" }
                    }
                  >
                    {roomDetails?.map((val, i) => {
                      return (
                        <li
                          key={i}
                          onClick={() => {
                            setRoomDetailsToShow(val);
                            let roomId = val?.bookoneRoomId;
                            setRoomIdWithSevenDaysData(roomId);
                            sevenDaysDataOfRoom(token, roomId);
                          }}
                        >
                          {val.name}
                        </li>
                      );
                    })}
                  </div>
                </button>
                <button
                  className={`${styles.button} flex h-10 items-center`}
                  onClick={handleRateDrop}
                >
                  <BsFillTagFill
                    style={{ marginRight: "8px", marginBottom: "2px" }}
                  />
                  All Plans
                  <MdOutlineArrowDropDown
                    size={22}
                    style={{ marginLeft: "2px", marginBottom: "4px" }}
                  />
                  <div
                    className={styles.ratePlanDrop}
                    onMouseLeave={handleRateDrop}
                    style={
                      ratePlans ? { display: "block" } : { display: "none" }
                    }
                  >
                    <li>Bar</li>
                    <li>Honeymoon</li>
                    <li>Bed & Breakfast</li>
                  </div>
                </button>
              </Col>
              <Col className={styles.rightlinkText}></Col>
            </Row>
          </div>
        </div>
      </div>
    </div>
  );
}
